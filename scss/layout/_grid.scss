.container-fluid {
	margin-left: auto;
	margin-right: auto;
	overflow: hidden;
	word-wrap: break-word;
	@include rem(margin-bottom, map-get($grid, 'spacing'));
	@include rem(padding-left, map-get($grid, 'spacing'));
	@include rem(padding-right, map-get($grid, 'spacing'));
}

.container {
	@extend .container-fluid;

	@each $key, $value in $column-class {
		@if ($key != 'base' and $key != 'xsmall') {
			@include responsive(min-width, map-get($viewport, $key)) {
				@include rem(max-width, map-get($viewport-size, $key));
			}
		}
	}
}

.row {
	overflow: hidden;
	@include rem(margin-left, (map-get($grid, 'spacing') * -1));
	@include rem(margin-right, (map-get($grid, 'spacing') * -1));
	@extend .clearfix;
}

@each $key, $value in $column-class {
	$class: '#{map-get($column-class, 'base')}-#{$value}';

	@if ($key == 'base') {
		$class: '#{$value}';
	}

	@if ($key == 'base') {
		[class*="#{$class}-"] {
			position: relative;
			overflow: hidden;
			@include rem(padding-left, map-get($grid, 'spacing'));
			@include rem(padding-right, map-get($grid, 'spacing'));
		}
	} @else if ($key == 'xsmall') {
		[class*="#{$class}-"] {
			float: left;
		}

		@include grid-columns($class, map-get($grid, 'columns'));
	} @else {
		@include responsive(min-width, map-get($viewport, $key)) {
			[class*="#{$class}-"] {
				float: left;
			}

			@include grid-columns($class, map-get($grid, 'columns'));
		}
	}
}
